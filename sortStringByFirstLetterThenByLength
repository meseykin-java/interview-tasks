
import java.util.*;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import static java.util.stream.Collectors.toList;
/*
Возвращает строку из заданной по принципу: сначала отсортировать слова в строке по алфавите(по первой букве), 
затем внутри отсортированных по первой букве групп добавить сортировку по длине
*/
public class StreamExample {

    public static void main(String[] args) {
        String string = "aaa, abc, rey, qaq, abcd, wer, ghf, bvn, anr, abbbbbb";
        List<String> list = new ArrayList<>(Arrays.asList(string.split(" ")));
        Map<Object, List<String>> map = list.stream().flatMap(s -> Stream.of(s.split("[^a-zA-Z]"))).
                filter(s -> s.length() > 0).sorted().
                sorted((o1, o2) -> {
                    int len1 = o1.length();
                    int len2 = o2.length();
                    if (len1 < len2)
                        return 1;
                    else {
                        if (len1 > len2)
                            return -1;
                        else return 0;
                    }
                }).collect(Collectors.groupingBy(s -> s.charAt(0)));
        map.entrySet().forEach(System.out::println);
        Map<Object, List<String>> sortedMap = new TreeMap<>(map);
        List<String> together = sortedMap.entrySet().stream().flatMap(characterListEntry -> characterListEntry.getValue().stream()).collect(toList());
        string = together.toString();
        System.out.println(string);//output: abbbbbb, abcd, aaa, abc, anr, bvn, ghf, qaq, rey, wer
    }
}
